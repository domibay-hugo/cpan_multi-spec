---
#
# @author Bodo (Hugo) Barwich
# @version 2021-07-28
# @package RPM Packaging for Perl
# @subpackage roles/module-download/tasks/download_packages.yml

# This playbook downloads the Package from the found Download Link
#
#---------------------------------
# Requirements:
#
#---------------------------------
# Configurations:
#
#---------------------------------
# External Parameters:
# - "list_packages": Dictionary of Found Packages
#



- name: Package List is required
  meta: end_play
  when: list_packages is undefined
    or list_packages | length == 0
                                      
- name: Copy Requested Module Names
  set_fact:
    download_directory: "{{ source_directory | default('roles/module-download/download') }}"
    downloaded_files: []
                 
- name: Create the Download Directory
  file: 
    path: "{{ download_directory }}/" 
    state: directory 
                                      
- name: Download Found Packages
  get_url:
    url: "{{ package_data.value.download_url }}"
    dest: "{{ download_directory }}"
  loop: "{{ list_packages | dict2items }}"
  loop_control:
    loop_var: package_data
  register: package_download_rs
               
- name: Download Result 0
  debug:
    var: package_download_rs
  when: ansible_verbosity > 1    

- name: Parse Extensions for downloaded Packages
  set_fact:
    downloaded_files: "{{ downloaded_files + [{'path': download_rs.dest, 'file': download_rs.dest | basename , 'extension': download_rs.dest | regex_search('((\\.[^\\.]{1,4})?\\.[^\\.]{1,4})$') }] }}"
  loop: "{{ package_download_rs.results }}"
  loop_control:
    loop_var: download_rs
    index_var: download_idx
  when: not download_rs.failed
               
- name: Downloaded Files 0
  debug:
    var: downloaded_files
  when: ansible_verbosity > 1    

- name: Extract downloaded Package into Download Directory
  command:
    cmd: "tar -xzf {{ item.file }}"
    chdir: "{{ download_directory }}"
    warn: false
  changed_when: false
  loop: "{{ downloaded_files }}"
  register: package_extract_rs
  when: item.extension == '.tar.gz'
               
- name: Extract List 0
  debug:
    var: package_extract_rs
  when: ansible_verbosity > 1
  
#- name: Extract downloaded Package into Download Directory
#  ansible.builtin.unarchive:
#    src: "{{ item.dest | realpath }}"
#    dest: "{{ download_directory }}"
#  loop: "{{ package_download_rs.results }}"
#  when: not item.failed
    
